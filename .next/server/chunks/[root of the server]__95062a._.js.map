{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Ashwin/projects/wavfy/wavefy/auth.config.ts"],"sourcesContent":["import GitHub from \"next-auth/providers/github\";\r\nimport type { NextAuthConfig } from \"next-auth\";\r\n\r\n// Notice this is only an object, not a full Auth.js instance\r\nexport default {\r\n  providers: [GitHub],\r\n  pages: {\r\n    signIn: \"/signin\",\r\n  },\r\n} satisfies NextAuthConfig;\r\n"],"names":[],"mappings":";;;AAAA;AAAA;;uCAIe;IACb,WAAW;QAAC,uJAAA,CAAA,UAAM;KAAC;IACnB,OAAO;QACL,QAAQ;IACV;AACF"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Ashwin/projects/wavfy/wavefy/prisma/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst globalForPrisma = globalThis as unknown as { prisma: PrismaClient };\r\n\r\nexport const prisma = globalForPrisma.prisma || new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAEjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,2GAAA,CAAA,eAAY;AAEhE,wCAA2C,gBAAgB,MAAM,GAAG"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Ashwin/projects/wavfy/wavefy/auth.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\r\nimport authConfig from \"./auth.config\";\r\nimport { PrismaAdapter } from \"@auth/prisma-adapter\";\r\nimport { prisma } from \"./prisma/db\";\r\n\r\nexport const { handlers, auth, signIn, signOut } = NextAuth({\r\n  adapter: PrismaAdapter(prisma),\r\n  session: { strategy: \"jwt\" },\r\n  ...authConfig,\r\n});\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAHA;;;;;AAKO,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,uJAAA,CAAA,UAAQ,AAAD,EAAE;IAC1D,SAAS,CAAA,GAAA,sJAAA,CAAA,gBAAa,AAAD,EAAE,8GAAA,CAAA,SAAM;IAC7B,SAAS;QAAE,UAAU;IAAM;IAC3B,GAAG,gHAAA,CAAA,UAAU;AACf"}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Ashwin/projects/wavfy/wavefy/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import { handlers } from \"@/auth\"; // Referring to the auth.ts we just created\r\nexport const { GET, POST } = handlers;\r\n"],"names":[],"mappings":";;;;AAAA,iLAAmC,2CAA2C;;AACvE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,sGAAA,CAAA,WAAQ"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}